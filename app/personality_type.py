from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Router, Bot
from aiogram.fsm.context import FSMContext
import app.keyboards as kb
from app.generators import *
from app.states import Form
from config import *
from database import BotDB

db = BotDB('sizif_mode.db')
router = Router()
bot = Bot(token=TG_TOKEN)

from personality_description import *


zerototen = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='1', callback_data='1'), InlineKeyboardButton(text='3', callback_data='3'),
     InlineKeyboardButton(text='5', callback_data='5'), InlineKeyboardButton(text='7', callback_data='7'),
     InlineKeyboardButton(text='9', callback_data='9')],
    [InlineKeyboardButton(text='2', callback_data='2'),
     InlineKeyboardButton(text='4', callback_data='4'), InlineKeyboardButton(text='6', callback_data='6'),
     InlineKeyboardButton(text='8', callback_data='8'), InlineKeyboardButton(text='10', callback_data='10')],
])


@router.callback_query(lambda c: c.data in ['personality_type'])
async def personality_type(callback_query: CallbackQuery, state: FSMContext):
    await callback_query.message.answer(
        "üß† <b>–ß—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–≤–æ–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏, —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã.</b>\n\n"
        "üìã –¢–µ–±–µ –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω—ã —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è. –ï—Å–ª–∏ —Ç—ã —Å–æ–≥–ª–∞—Å–µ–Ω ‚Äî –Ω–∞–∂–∏–º–∞–π <b>üîü</b>, –µ—Å–ª–∏ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω ‚Äî <b>1Ô∏è‚É£</b>.\n"
        "20 –≤–æ–ø—Ä–æ—Å–æ–≤ / 4 –º–∏–Ω—É—Ç—ã",
        parse_mode='html'
    )
    await callback_query.message.answer(
        '–Ø –ª—é–±–ª—é –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ.',
        reply_markup=zerototen
    )
    await state.set_state(Form.ei1)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.ei1)
async def ei2(callback_query: CallbackQuery, state: FSMContext):
    await state.update_data(ei=callback_query.data)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤ –±–æ–ª—å—à–æ–º –∫—Ä—É–≥–µ –ª—é–¥–µ–π, –∏ —è –∑–∞—Ä—è–∂–∞—é—Å—å —ç–Ω–µ—Ä–≥–∏–µ–π –æ—Ç –æ–±—â–µ–Ω–∏—è.',
        reply_markup=zerototen
    )
    await state.set_state(Form.ei2)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.ei2)
async def ei3(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    ei = int(data['ei']) + int(callback_query.data)
    await state.update_data(ei=ei)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –±—ã—Å—Ç—Ä–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Å—å –ø–æ—Å–ª–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∏ –ª—é–±–ª—é –±—ã—Ç—å –æ–∫—Ä—É–∂–µ–Ω–Ω—ã–º –ª—é–¥—å–º–∏.',
        reply_markup=zerototen
    )
    await state.set_state(Form.ei3)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.ei3)
async def ei4(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    ei = int(data['ei']) + int(callback_query.data)
    await state.update_data(ei=ei)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–æ–±—ã—Ç–∏–π, –∞ –Ω–µ –º–æ–ª—á–∞ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–º.',
        reply_markup=zerototen
    )
    await state.set_state(Form.sn1)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.sn1)
async def sn2(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    ei = int(data['ei']) + int(callback_query.data)
    await state.update_data(ei=ei)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–∞–∫—Ç–∞—Ö –∏ –¥–µ—Ç–∞–ª—è—Ö, —á–µ–º –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö –∏–¥–µ—è—Ö.',
        reply_markup=zerototen
    )
    await state.set_state(Form.sn2)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.sn2)
async def sn3(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    sn = int(callback_query.data)
    await state.update_data(sn=sn)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–ö–æ–≥–¥–∞ —è —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ –∑–∞–¥–∞—á–µ–π, –º–Ω–µ –≤–∞–∂–Ω–µ–µ —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º –º–µ—Ç–æ–¥–∞–º, —á–µ–º –∏—Å–∫–∞—Ç—å –Ω–æ–≤—ã–µ –ø—É—Ç–∏.',
        reply_markup=zerototen
    )
    await state.set_state(Form.sn3)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.sn3)
async def sn4(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    sn = int(data['sn']) + int(callback_query.data)
    await state.update_data(sn=sn)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –±–æ–ª—å—à–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–∞—á–∏–≤–∞—é—Å—å –Ω–∞ —Ç–æ–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–π—á–∞—Å, —á–µ–º –Ω–∞ —Ç–æ–º, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –≤ –±—É–¥—É—â–µ–º.',
        reply_markup=zerototen
    )
    await state.set_state(Form.sn4)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.sn4)
async def sn5(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    sn = int(data['sn']) + int(callback_query.data)
    await state.update_data(sn=sn)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–ú–Ω–µ –ø—Ä–æ—â–µ –æ–ø–∏—Ä–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π –æ–ø—ã—Ç –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã, —á–µ–º –Ω–∞ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∏–¥–µ–∏ –∏ –¥–æ–≥–∞–¥–∫–∏.',
        reply_markup=zerototen
    )
    await state.set_state(Form.tf1)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.tf1)
async def tf2(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    sn = int(data['sn']) + int(callback_query.data)
    await state.update_data(sn=sn)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–ü—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π —è —á–∞—â–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É—é—Å—å –ª–æ–≥–∏–∫–æ–π –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é, —á–µ–º —á—É–≤—Å—Ç–≤–∞–º–∏ –∏ —ç–º–æ—Ü–∏—è–º–∏.',
        reply_markup=zerototen
    )
    await state.set_state(Form.tf2)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.tf2)
async def tf3(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    tf = int(callback_query.data)
    await state.update_data(tf=tf)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–í –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö –¥–ª—è –º–µ–Ω—è –≤–∞–∂–Ω–µ–µ –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–º, —á–µ–º –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –≥–∞—Ä–º–æ–Ω–∏–∏ –∏ —á—É–≤—Å—Ç–≤–∞—Ö –¥—Ä—É–≥–∏—Ö.',
        reply_markup=zerototen
    )
    await state.set_state(Form.tf3)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.tf3)
async def tf4(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    tf = int(data['tf']) + int(callback_query.data)
    await state.update_data(tf=tf)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø —Å—Ç–∞—Ä–∞—é—Å—å –∏–∑–±–µ–≥–∞—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏–π –∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é —Å —Ö–æ–ª–æ–¥–Ω–æ–π –≥–æ–ª–æ–≤–æ–π.',
        reply_markup=zerototen
    )
    await state.set_state(Form.tf4)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.tf4)
async def jp1(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    tf = int(data['tf']) + int(callback_query.data)
    await state.update_data(tf=tf)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ä–µ—à–µ–Ω–∏—è, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∏ –ª–æ–≥–∏–∫—É, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏ —É –¥—Ä—É–≥–∏—Ö.',
        reply_markup=zerototen
    )
    await state.set_state(Form.jp1)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.jp1)
async def jp2(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    tf = int(data['tf']) + int(callback_query.data)
    await state.update_data(tf=tf)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∑–∞—Ä–∞–Ω–µ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º.',
        reply_markup=zerototen
    )
    await state.set_state(Form.jp2)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.jp2)
async def jp3(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    jp = int(callback_query.data)
    await state.update_data(jp=jp)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ, –∫–æ–≥–¥–∞ —É –º–µ–Ω—è –µ—Å—Ç—å —á—ë—Ç–∫–∏–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —á–µ–º –∫–æ–≥–¥–∞ –≤—Å—ë —Ä–µ—à–∞–µ—Ç—Å—è —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ.',
        reply_markup=zerototen
    )
    await state.set_state(Form.jp3)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.jp3)
async def jp4(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    jp = int(data['jp']) + int(callback_query.data)
    await state.update_data(jp=jp)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∑–∞–≤–µ—Ä—à–∞—Ç—å –Ω–∞—á–∞—Ç—ã–µ –¥–µ–ª–∞ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –æ—Å—Ç–∞–≤–ª—è—Ç—å –∏—Ö –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç.',
        reply_markup=zerototen
    )
    await state.set_state(Form.jp4)


@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.jp4)
async def jp5(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    jp = int(data['jp']) + int(callback_query.data)
    await state.update_data(jp=jp)
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text='–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ —É –º–µ–Ω—è –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–∞ –≤—ã–±–∏—Ä–∞—Ç—å, —á–µ–º –∑–∞–Ω—è—Ç—å—Å—è –∏ –≤ –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –∞ –Ω–µ —Å–ª–µ–¥–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É –ø–ª–∞–Ω—É.',
        reply_markup=zerototen
    )
    await state.set_state(Form.jp5)



@router.callback_query(lambda c: c.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], Form.jp5)
async def jp1(callback_query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    jp = int(data['jp']) + int(callback_query.data)
    await state.update_data(jp=jp)
    data = await state.get_data()
    ei = 'I' if int(data['ei']) <= 25 else 'E'
    sn = 'N' if int(data['sn']) <= 25 else 'S'
    tf = 'F' if int(data['tf']) <= 25 else 'T'
    jp = 'P' if int(data['jp']) <= 25 else 'J'
    descriptions = {
        "ESTJ": ESTJ_description,
        "INFP": INFP_description,
        "INTJ": INTJ_description,
        "ESFP": ESFP_description,
        "ENTP": ENTP_description,
        "ISFJ": ISFJ_description,
        "INFJ": INFJ_description,
        "ISTJ": ISTJ_description,
        "ENFJ": ENFJ_description,
        "ISTP": ISTP_description,
        "ISFP": ISFP_description,
        "ESTP": ESTP_description,
        "ENTJ": ENTJ_description,
        "ENFP": ENFP_description,
        "INTP": INTP_description,
        "ESFJ": ESFJ_description,
    }
    type=f'{ei}{sn}{tf}{jp}'
    await callback_query.message.edit_text(text=descriptions[type], parse_mode='HTML', reply_markup=kb.menu_button_more_personality)
    db.update_personality_type(user_id=callback_query.from_user.id, personality_type=type)


@router.callback_query(lambda c: c.data in ['morepersonality'])
async def more_personality(callback_query: CallbackQuery, state: FSMContext):
    a = await callback_query.message.answer("‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...", parse_mode='HTML')
    id[0] = a.message_id
    personality_type = db.get_personality_type(callback_query.from_user.id)
    response=await generate_more_personality(personality_type)
    await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=id[0])
    await callback_query.message.answer(text=response, parse_mode='HTML', reply_markup=kb.menu_button)